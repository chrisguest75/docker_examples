#!/usr/bin/env just --justfile
# ^ A shebang isn't required, but allows a justfile to be executed
#   like a script, with `./justfile test`, for example.

set dotenv-load := true

# default lists actions
default:
  @just -f justfile --list


build dockerfile="bindmount":
  #!/usr/bin/env bash
  set -eufo pipefail
  docker build -f Dockerfile.{{ dockerfile }} -t filesystempermissions . 
  
start dockerfile="bindmount": (build dockerfile)
  #!/usr/bin/env bash
  set -eufo pipefail  
  mkdir -p ./mount/readonly
  mkdir -p ./mount/writable
  docker run -it --rm --mount type=bind,source=./mount/readonly,target=/mnt/readonly,readonly --mount type=bind,source=./mount/writable,target=/mnt/writable --name filesystempermissions filesystempermissions

start_volume dockerfile="volumemount": (build dockerfile)
  #!/usr/bin/env bash
  set -eufo pipefail  
  # Create a volume (can be called twice)
  docker volume create filesystempermissions_readonly_volume
  docker volume create filesystempermissions_writeable_volume
  docker run -it --rm --mount type=volume,source=filesystempermissions_readonly_volume,target=/mnt/readonly_volume,readonly --mount type=volume,source=filesystempermissions_writeable_volume,target=/mnt/writable_volume filesystempermissions

clean_volume:
  #!/usr/bin/env bash
  set -eufo pipefail
  docker volume rm filesystempermissions_readonly_volume
  docker volume rm filesystempermissions_writeable_volume


dive:
  dive filesystempermissions